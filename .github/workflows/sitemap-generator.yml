name: Comprehensive Sitemap Generator

on:
  # Run every 6 hours
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  
  # Run after successful article scraping
  workflow_run:
    workflows: ["Daily Article Scraper", "Scrape and Post Articles"]
    types:
      - completed
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  generate-sitemaps:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "Creating .env file with secrets..."
          echo "WORDPRESS_API_URL=$WORDPRESS_API_URL" > .env
          echo "WORDPRESS_CLIENT_ID=$WORDPRESS_CLIENT_ID" >> .env
          echo "WORDPRESS_CLIENT_SECRET=$WORDPRESS_CLIENT_SECRET" >> .env
          echo "WORDPRESS_USERNAME=$WORDPRESS_USERNAME" >> .env
          echo "WORDPRESS_PASSWORD=$WORDPRESS_PASSWORD" >> .env
          echo "OPENROUTER_API_KEY=$OPENROUTER_API_KEY" >> .env
          echo "NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL" >> .env
          
          echo "Created .env file with the following variables:"
          cat .env | grep -v PASSWORD | grep -v SECRET | grep -v KEY
        env:
          WORDPRESS_API_URL: ${{ secrets.WORDPRESS_API_URL }}
          WORDPRESS_CLIENT_ID: ${{ secrets.WORDPRESS_CLIENT_ID }}
          WORDPRESS_CLIENT_SECRET: ${{ secrets.WORDPRESS_CLIENT_SECRET }}
          WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
          WORDPRESS_PASSWORD: ${{ secrets.WORDPRESS_PASSWORD }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}

      - name: Generate main sitemap
        run: node scripts/generate-sitemap.js

      - name: Generate sitemap index and news sitemap
        run: node scripts/generate-sitemap-index.js

      - name: Generate HTML sitemap
        run: node scripts/generate-html-sitemap.js

      - name: Commit and push sitemap changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add public/sitemap.xml
          git add public/sitemap-index.xml
          git add public/sitemap-news.xml
          git add public/sitemap.html
          git commit -m "Update sitemaps [skip ci]" || echo "No changes to commit"
          git push
          
      - name: Submit sitemaps to search engines
        run: node scripts/submit-to-search-engines.js
        env:
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
          
      - name: Create sitemap report
        run: |
          echo "# Sitemap Generation Report" > sitemap-report.md
          echo "Generated on: $(date)" >> sitemap-report.md
          echo "" >> sitemap-report.md
          echo "## Files Generated" >> sitemap-report.md
          echo "- sitemap.xml" >> sitemap-report.md
          echo "- sitemap-index.xml" >> sitemap-report.md
          echo "- sitemap-news.xml" >> sitemap-report.md
          echo "- sitemap.html" >> sitemap-report.md
          echo "" >> sitemap-report.md
          echo "## Sitemap Statistics" >> sitemap-report.md
          echo "- Main sitemap size: $(stat -c%s public/sitemap.xml) bytes" >> sitemap-report.md
          echo "- News sitemap size: $(stat -c%s public/sitemap-news.xml) bytes" >> sitemap-report.md
          echo "- HTML sitemap size: $(stat -c%s public/sitemap.html) bytes" >> sitemap-report.md
          echo "" >> sitemap-report.md
          echo "## URL Counts" >> sitemap-report.md
          echo "- URLs in main sitemap: $(grep -c "<loc>" public/sitemap.xml)" >> sitemap-report.md
          echo "- URLs in news sitemap: $(grep -c "<loc>" public/sitemap-news.xml)" >> sitemap-report.md
          echo "" >> sitemap-report.md
          echo "## Next Steps" >> sitemap-report.md
          echo "1. Verify sitemaps in Google Search Console" >> sitemap-report.md
          echo "2. Monitor indexing progress" >> sitemap-report.md
          echo "3. Check for any crawl errors" >> sitemap-report.md
          
      - name: Upload sitemap report
        uses: actions/upload-artifact@v3
        with:
          name: sitemap-report
          path: sitemap-report.md
